{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Swagger for Jobbi Back-end\n\nSchemes: [http, https]",
    "title": "Jobbi Back-end",
    "contact": {
      "name": "Maxime Denuit",
      "email": "maxime@nightborn.be"
    },
    "version": "1.0.0"
  },
  "basePath": "/",
  "paths": {
    "/me": {
      "get": {
        "description": "Return user",
        "produces": [
          "application/json"
        ],
        "summary": "Get user by sub.",
        "operationId": "GetUserBySub",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "Return user",
        "produces": [
          "application/json"
        ],
        "summary": "Put user.",
        "operationId": "ModifyUser",
        "parameters": [
          {
            "description": "user",
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches": {
      "post": {
        "description": "type id struct\nCreate search.\nReturn search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "searches"
        ],
        "operationId": "AddSearch",
        "parameters": [
          {
            "description": "search",
            "name": "search",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PostSearchRequestDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/PostSearchResponseDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/me": {
      "get": {
        "description": "Return my search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "searches"
        ],
        "summary": "Get my search.",
        "operationId": "GetMySearch",
        "responses": {
          "200": {
            "description": "Get my search",
            "schema": {
              "$ref": "#/definitions/MySearchDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/public": {
      "get": {
        "description": "Return my followed searches",
        "produces": [
          "application/json"
        ],
        "tags": [
          "searches"
        ],
        "summary": "Get my followed searches.",
        "operationId": "GetMyFollowedSearches",
        "responses": {
          "200": {
            "description": "Get my followed searches",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FollowedSearchDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/shared": {
      "get": {
        "description": "Return my shared searches",
        "produces": [
          "application/json"
        ],
        "tags": [
          "searches"
        ],
        "summary": "Get my shared searches.",
        "operationId": "GetMySharedSearches",
        "responses": {
          "200": {
            "description": "Get my shared searches",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SharedSearchDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}": {
      "get": {
        "description": "type id struct\nGet search by id.\nReturn search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "searches"
        ],
        "operationId": "GetSearchById",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "type id struct\nCreate search.\nReturn search",
        "produces": [
          "application/json"
        ],
        "tags": [
          "searches"
        ],
        "operationId": "ModifySearch",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "description": "search",
            "name": "search",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SearchDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/SearchDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}/companies": {
      "get": {
        "description": "type id struct\nGet Companies by searchId.\nReturn company",
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "operationId": "GetCompaniesBySearchId",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "All the companies",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CompanyDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "type id struct\nCreate company.\nReturn company",
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "operationId": "AddCompany",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "description": "company",
            "name": "company",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CompanyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}/companies/{companyId}": {
      "get": {
        "description": "type id struct\nGet company by id.\nReturn company",
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "operationId": "GetCompanyById",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "companyId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "type id struct\nModify company.\nReturn company",
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "operationId": "ModifyCompany",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "companyId",
            "in": "path",
            "required": true
          },
          {
            "description": "company",
            "name": "company",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CompanyDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/CompanyDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "type id struct\nDelete company.\nReturn true or error",
        "produces": [
          "application/json"
        ],
        "tags": [
          "companies"
        ],
        "operationId": "DeleteCompany",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "companyId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}/friendships": {
      "get": {
        "description": "type id struct\nGet friendships by search id.\nReturn users",
        "produces": [
          "application/json"
        ],
        "tags": [
          "searches"
        ],
        "operationId": "GetSearchFriendships",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "status",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "type id struct\nCreate friendship.\nReturn friendship",
        "produces": [
          "application/json"
        ],
        "tags": [
          "friendships"
        ],
        "operationId": "AddFriendship",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "description": "friendship",
            "name": "friendship",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/FriendshipDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/FriendshipDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}/networks": {
      "get": {
        "description": "type id struct\nGet networks by searchId.\nReturn network",
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "operationId": "GetNetworksBySearchId",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NetworkDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "type id struct\nPost  network.\nReturn  network",
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "operationId": "AddNetwork",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "description": "test",
            "name": "network",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}/networks/{networkId}": {
      "get": {
        "description": "type id struct\nGet  network by id.\nReturn  network",
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "operationId": "GetNetworkById",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "networkId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "type id struct\nPut  network.\nReturn  network",
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "operationId": "ModifyNetwork",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "networkId",
            "in": "path",
            "required": true
          },
          {
            "description": "test",
            "name": "network",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NetworkDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NetworkDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "type id struct\nDelete network.\nReturn true or error",
        "produces": [
          "application/json"
        ],
        "tags": [
          "networks"
        ],
        "operationId": "DeleteNetwork",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "networkId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}/offers": {
      "get": {
        "description": "type id struct\nGet offers by searchId.\nReturn offer",
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "operationId": "GetOffersBySearchId",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfferDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "description": "type id struct\nCreate offer.\nReturn offer",
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "operationId": "AddOffer",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "description": "offer",
            "name": "offer",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OfferDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OfferDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/searches/{searchId}/offers/{offerId}": {
      "get": {
        "description": "type id struct\nGet offer by id.\nReturn offer",
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "operationId": "GetOfferById",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "offerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OfferDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "put": {
        "description": "type id struct\nModify offer.\nReturn offer",
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "operationId": "ModifyOffer",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "offerId",
            "in": "path",
            "required": true
          },
          {
            "description": "offer",
            "name": "offer",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/OfferDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/OfferDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "delete": {
        "description": "type id struct\nDelete offer.\nReturn true or error",
        "produces": [
          "application/json"
        ],
        "tags": [
          "offers"
        ],
        "operationId": "DeleteOffer",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "searchId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "test",
            "name": "offerId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "boolean"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users": {
      "post": {
        "description": "Return user",
        "produces": [
          "application/json"
        ],
        "summary": "Create new user.",
        "operationId": "CreateUser",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/UserDTO"
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users/{userId}/friendships": {
      "get": {
        "description": "type id struct\nGet user friendships.\nReturn friendship",
        "produces": [
          "application/json"
        ],
        "tags": [
          "users"
        ],
        "operationId": "GetUserFriendships",
        "parameters": [
          {
            "type": "string",
            "description": "test",
            "name": "userId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "test",
            "name": "status",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SearchWithOwnerAndFriendsDTO"
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    }
  },
  "definitions": {
    "AnswerDTO": {
      "description": "An answer",
      "type": "object",
      "required": [
        "id",
        "type"
      ],
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "The id",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Id"
        },
        "link": {
          "description": "The link",
          "type": "string",
          "x-go-name": "Link"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "description": "The type",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "CompanyDTO": {
      "description": "An company",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "link": {
          "description": "The link",
          "type": "string",
          "x-go-name": "Link"
        },
        "searchId": {
          "description": "The SearchID",
          "type": "string",
          "x-go-name": "SearchID"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "userId": {
          "description": "The UserID",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "DeviceDTO": {
      "description": "An user",
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "token": {
          "description": "The token",
          "type": "string",
          "x-go-name": "Token"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "FollowedSearchDTO": {
      "description": "An followed search",
      "type": "object",
      "required": [
        "description",
        "title",
        "type"
      ],
      "properties": {
        "avatarUrl": {
          "description": "Avatar url",
          "type": "string",
          "x-go-name": "AvatarUrl"
        },
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "firstName": {
          "description": "The firstName",
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "lastName": {
          "description": "The lastName",
          "type": "string",
          "x-go-name": "LastName"
        },
        "sector": {
          "description": "The search sector",
          "type": "string",
          "x-go-name": "Sector"
        },
        "tags": {
          "$ref": "#/definitions/StringArray"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "description": "The search type",
          "type": "string",
          "x-go-name": "Type"
        },
        "userId": {
          "description": "UserId",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "FriendSearchDTO": {
      "description": "A friend search",
      "type": "object",
      "required": [
        "description",
        "title"
      ],
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "email": {
          "description": "The email",
          "type": "string",
          "x-go-name": "Email"
        },
        "externalId": {
          "description": "The externalId",
          "type": "string",
          "x-go-name": "ExternalId"
        },
        "firstName": {
          "description": "The firstName",
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "lastName": {
          "description": "The lastName",
          "type": "string",
          "x-go-name": "LastName"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "userId": {
          "description": "UserId",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "FriendshipDTO": {
      "description": "An friendship",
      "type": "object",
      "properties": {
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "searchId": {
          "description": "The searchId",
          "type": "string",
          "x-go-name": "SearchId"
        },
        "state": {
          "description": "The state",
          "type": "integer",
          "format": "uint64",
          "x-go-name": "State"
        },
        "type": {
          "description": "The type",
          "type": "string",
          "x-go-name": "Type"
        },
        "userId": {
          "description": "The userId",
          "type": "string",
          "x-go-name": "UserId"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "MySearchDTO": {
      "description": "My search",
      "type": "object",
      "required": [
        "title",
        "type"
      ],
      "properties": {
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "participants": {
          "description": "The participants",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDTO"
          },
          "x-go-name": "Participants"
        },
        "sector": {
          "description": "The search sector",
          "type": "string",
          "x-go-name": "Sector"
        },
        "tags": {
          "$ref": "#/definitions/StringArray"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "description": "The search type",
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "NetworkDTO": {
      "description": "An network",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "email": {
          "description": "The email",
          "type": "string",
          "x-go-name": "Email"
        },
        "firstName": {
          "description": "The firstName",
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "lastName": {
          "description": "The lastName",
          "type": "string",
          "x-go-name": "LastName"
        },
        "link": {
          "description": "The link",
          "type": "string",
          "x-go-name": "Link"
        },
        "phoneNumber": {
          "description": "The phoneNumber",
          "type": "string",
          "x-go-name": "PhoneNumber"
        },
        "searchId": {
          "description": "The search id",
          "type": "string",
          "x-go-name": "SearchID"
        },
        "userId": {
          "description": "The user id",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "OfferDTO": {
      "description": "An offer",
      "type": "object",
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "link": {
          "description": "The link",
          "type": "string",
          "x-go-name": "Link"
        },
        "searchId": {
          "description": "the search id",
          "type": "string",
          "x-go-name": "SearchID"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "userId": {
          "description": "the user id",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "PostSearchRequestDTO": {
      "description": "An search",
      "type": "object",
      "required": [
        "description",
        "title",
        "type"
      ],
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "sector": {
          "description": "The search sector",
          "type": "string",
          "x-go-name": "Sector"
        },
        "tags": {
          "$ref": "#/definitions/StringArray"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "description": "The search type",
          "type": "string",
          "x-go-name": "Type"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "PostSearchResponseDTO": {
      "description": "An search",
      "type": "object",
      "required": [
        "description",
        "title",
        "type"
      ],
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "sector": {
          "description": "The search sector",
          "type": "string",
          "x-go-name": "Sector"
        },
        "tags": {
          "$ref": "#/definitions/StringArray"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "description": "The search type",
          "type": "string",
          "x-go-name": "Type"
        },
        "userId": {
          "description": "UserId",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "SearchDTO": {
      "description": "An search",
      "type": "object",
      "required": [
        "description",
        "title",
        "type"
      ],
      "properties": {
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "sector": {
          "description": "The search sector",
          "type": "string",
          "x-go-name": "Sector"
        },
        "tags": {
          "$ref": "#/definitions/StringArray"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "description": "The search type",
          "type": "string",
          "x-go-name": "Type"
        },
        "userId": {
          "description": "UserId",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "SearchWithOwnerAndFriendsDTO": {
      "description": "A Quest with owner and friends details",
      "type": "object",
      "properties": {
        "friends": {
          "description": "Friends",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserDTO"
          },
          "x-go-name": "Friends"
        },
        "owner": {
          "$ref": "#/definitions/UserDTO"
        },
        "search": {
          "$ref": "#/definitions/SearchDTO"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "SharedSearchDTO": {
      "description": "An shared search",
      "type": "object",
      "required": [
        "description",
        "title",
        "type"
      ],
      "properties": {
        "avatarUrl": {
          "description": "Avatar url",
          "type": "string",
          "x-go-name": "AvatarUrl"
        },
        "description": {
          "description": "The description",
          "type": "string",
          "x-go-name": "Description"
        },
        "firstName": {
          "description": "The firstName",
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "lastName": {
          "description": "The lastName",
          "type": "string",
          "x-go-name": "LastName"
        },
        "sector": {
          "description": "The search sector",
          "type": "string",
          "x-go-name": "Sector"
        },
        "tags": {
          "$ref": "#/definitions/StringArray"
        },
        "title": {
          "description": "The title",
          "type": "string",
          "x-go-name": "Title"
        },
        "type": {
          "description": "The search type",
          "type": "string",
          "x-go-name": "Type"
        },
        "userId": {
          "description": "UserId",
          "type": "string",
          "x-go-name": "UserID"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    },
    "StringArray": {
      "type": "array",
      "title": "StringArray represents a one-dimensional array of the PostgreSQL character types.",
      "items": {
        "type": "string"
      },
      "x-go-package": "github.com/lib/pq"
    },
    "UserDTO": {
      "description": "An user",
      "type": "object",
      "properties": {
        "avatarUrl": {
          "description": "Avatar url",
          "type": "string",
          "x-go-name": "AvatarUrl"
        },
        "email": {
          "description": "The email",
          "type": "string",
          "x-go-name": "Email"
        },
        "externalId": {
          "description": "The externalId",
          "type": "string",
          "x-go-name": "ExternalId"
        },
        "firstName": {
          "description": "The firstName",
          "type": "string",
          "x-go-name": "FirstName"
        },
        "id": {
          "description": "The id",
          "type": "string",
          "x-go-name": "Id"
        },
        "lastName": {
          "description": "The lastName",
          "type": "string",
          "x-go-name": "LastName"
        }
      },
      "x-go-package": "github.com/philvc/jobbi-api/contract"
    }
  }
}